[
  {
    "num": 1,
    "lid": "L290",
    "patch": "(i == i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = (i == i);\n"
    ]
  },
  {
    "num": 2,
    "lid": "L290",
    "patch": "(i != i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = (i != i);\n"
    ]
  },
  {
    "num": 3,
    "lid": "L290",
    "patch": "(size == i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = (size == i);\n"
    ]
  },
  {
    "num": 4,
    "lid": "L290",
    "patch": "(i < size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = (i < size);\n"
    ]
  },
  {
    "num": 5,
    "lid": "L290",
    "patch": "(size < i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = (size < i);\n"
    ]
  },
  {
    "num": 6,
    "lid": "L290",
    "patch": "(size != i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = (size != i);\n"
    ]
  },
  {
    "num": 7,
    "lid": "L290",
    "patch": "((size + i) == i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = ((size + i) == i);\n"
    ]
  },
  {
    "num": 8,
    "lid": "L290",
    "patch": "(i < (size + i))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = (i < (size + i));\n"
    ]
  },
  {
    "num": 9,
    "lid": "L290",
    "patch": "((size + i) < i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = ((size + i) < i);\n"
    ]
  },
  {
    "num": 10,
    "lid": "L290",
    "patch": "((size + i) != i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = ((size + i) != i);\n"
    ]
  },
  {
    "num": 11,
    "lid": "L290",
    "patch": "((size + i) == size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = ((size + i) == size);\n"
    ]
  },
  {
    "num": 12,
    "lid": "L290",
    "patch": "(size < (size + i))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = (size < (size + i));\n"
    ]
  },
  {
    "num": 13,
    "lid": "L290",
    "patch": "((size + i) < size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = ((size + i) < size);\n"
    ]
  },
  {
    "num": 14,
    "lid": "L290",
    "patch": "((size + i) != size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  result = ((size + i) != size);\n"
    ]
  },
  {
    "num": 15,
    "lid": "L290",
    "patch": "(constant_a == i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a == i);\n"
    ]
  },
  {
    "num": 16,
    "lid": "L290",
    "patch": "(i < constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (i < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (i < constant_a);\n"
    ]
  },
  {
    "num": 17,
    "lid": "L290",
    "patch": "(constant_a < i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a < i);\n"
    ]
  },
  {
    "num": 18,
    "lid": "L290",
    "patch": "(constant_a != i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a != i);\n"
    ]
  },
  {
    "num": 19,
    "lid": "L290",
    "patch": "(constant_a == size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a == size);\n"
    ]
  },
  {
    "num": 20,
    "lid": "L290",
    "patch": "(size < constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (size < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (size < constant_a);\n"
    ]
  },
  {
    "num": 21,
    "lid": "L290",
    "patch": "(constant_a < size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a < size);\n"
    ]
  },
  {
    "num": 22,
    "lid": "L290",
    "patch": "(constant_a != size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a != size);\n"
    ]
  },
  {
    "num": 23,
    "lid": "L290",
    "patch": "((constant_a + i) == constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) == constant_a);\n"
    ]
  },
  {
    "num": 24,
    "lid": "L290",
    "patch": "(constant_a < (constant_a + i))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a < (constant_a + i));\n"
    ]
  },
  {
    "num": 25,
    "lid": "L290",
    "patch": "((constant_a + i) < constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) < constant_a);\n"
    ]
  },
  {
    "num": 26,
    "lid": "L290",
    "patch": "((constant_a + i) != constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) != constant_a);\n"
    ]
  },
  {
    "num": 27,
    "lid": "L290",
    "patch": "((constant_a + size) == constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) == constant_a);\n"
    ]
  },
  {
    "num": 28,
    "lid": "L290",
    "patch": "(constant_a < (constant_a + size))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a < (constant_a + size));\n"
    ]
  },
  {
    "num": 29,
    "lid": "L290",
    "patch": "((constant_a + size) < constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) < constant_a);\n"
    ]
  },
  {
    "num": 30,
    "lid": "L290",
    "patch": "((constant_a + size) != constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) != constant_a);\n"
    ]
  },
  {
    "num": 31,
    "lid": "L290",
    "patch": "((constant_a + i) == i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) == i);\n"
    ]
  },
  {
    "num": 32,
    "lid": "L290",
    "patch": "(i < (constant_a + i))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (i < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (i < (constant_a + i));\n"
    ]
  },
  {
    "num": 33,
    "lid": "L290",
    "patch": "((constant_a + i) < i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) < i);\n"
    ]
  },
  {
    "num": 34,
    "lid": "L290",
    "patch": "((constant_a + i) != i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) != i);\n"
    ]
  },
  {
    "num": 35,
    "lid": "L290",
    "patch": "((size + i) == constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((size + i) == constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((size + i) == constant_a);\n"
    ]
  },
  {
    "num": 36,
    "lid": "L290",
    "patch": "((constant_a + i) == size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) == size);\n"
    ]
  },
  {
    "num": 37,
    "lid": "L290",
    "patch": "((constant_a + size) == i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) == i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) == i);\n"
    ]
  },
  {
    "num": 38,
    "lid": "L290",
    "patch": "(i < (constant_a + size))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (i < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (i < (constant_a + size));\n"
    ]
  },
  {
    "num": 39,
    "lid": "L290",
    "patch": "(size < (constant_a + i))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (size < (constant_a + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (size < (constant_a + i));\n"
    ]
  },
  {
    "num": 40,
    "lid": "L290",
    "patch": "(constant_a < (size + i))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (constant_a < (size + i));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (constant_a < (size + i));\n"
    ]
  },
  {
    "num": 41,
    "lid": "L290",
    "patch": "((size + i) < constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((size + i) < constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((size + i) < constant_a);\n"
    ]
  },
  {
    "num": 42,
    "lid": "L290",
    "patch": "((constant_a + i) < size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) < size);\n"
    ]
  },
  {
    "num": 43,
    "lid": "L290",
    "patch": "((constant_a + size) < i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) < i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) < i);\n"
    ]
  },
  {
    "num": 44,
    "lid": "L290",
    "patch": "((size + i) != constant_a)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((size + i) != constant_a);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((size + i) != constant_a);\n"
    ]
  },
  {
    "num": 45,
    "lid": "L290",
    "patch": "((constant_a + i) != size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + i) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + i) != size);\n"
    ]
  },
  {
    "num": 46,
    "lid": "L290",
    "patch": "((constant_a + size) != i)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) != i);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) != i);\n"
    ]
  },
  {
    "num": 47,
    "lid": "L290",
    "patch": "((constant_a + size) == size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) == size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) == size);\n"
    ]
  },
  {
    "num": 48,
    "lid": "L290",
    "patch": "(size < (constant_a + size))",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = (size < (constant_a + size));\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = (size < (constant_a + size));\n"
    ]
  },
  {
    "num": 49,
    "lid": "L290",
    "patch": "((constant_a + size) < size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) < size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) < size);\n"
    ]
  },
  {
    "num": 50,
    "lid": "L290",
    "patch": "((constant_a + size) != size)",
    "codes": [
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -10;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -9;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -8;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -7;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -6;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -5;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -4;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -3;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -2;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = -1;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 0;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 1;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 2;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 3;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 4;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 5;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 6;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 7;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 8;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 9;\n  result = ((constant_a + size) != size);\n",
      "  long long size = rvals[0];\n  long long i = rvals[1];\n  long long constant_a = 10;\n  result = ((constant_a + size) != size);\n"
    ]
  }
]